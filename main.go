package main

import "flag"

func inter(booler bool) int {
	if booler {
		return 1
	}
	return 0
}

// SaveScript saves the provided script to the filename provided in an executable directory (default bin)
func SaveScript(args []string) {
	if len(args) > 2 {
		// Error
	}
}

// ExportAll exportss all the saved scripts, history and favourite to a binary file
func ExportAll(args []string) {
	if len(args) > 1 {
		// Error
	}
}

// ImportAll imports all the saved scripts, history and favourite from a binary file generated by ExportAll
func ImportAll(args []string) {
	if len(args) > 1 {
		// Error
	}
}

// CD improves the editors regular functionality with a favourite and regex serch option. Regex also searches favourites
func CD(fav bool, regex bool, args []string) {
	if len(args) > 2 || (!fav && (len(args) > 1)) {
		// Error
	}
}

// History shows your previous helios commands and allows you to jump to previous directories or commands
func History(args []string) {
	if len(args) > 1 {
		// Error
	}
}

func main() {
	sPtr := flag.Bool("s", false, "Define and save a script")

	ePtr := flag.Bool("e", false, "Export your settings and scripts")

	iPtr := flag.Bool("i", false, "Import your settings and scripts")

	fPtr := flag.Bool("f", false, "Favourite a directory, works with r. Automatically navigates there")
	rPtr := flag.Bool("r", false, "Regex search")

	hPtr := flag.Bool("h", false, "History of navigation in helios. Additional argument navigates to that item")

	flag.Parse()
	frPtr := *fPtr || *rPtr
	counter := inter(*sPtr) + inter(*ePtr) + inter(*iPtr) + inter(*iPtr) + inter(frPtr) + inter(*hPtr)
	if counter >= 2 || counter == 0 {
		// Error
	}

	if *sPtr {
		SaveScript(flag.Args())
	}
	if *ePtr {
		ExportAll(flag.Args())
	}
	if *iPtr {
		ImportAll(flag.Args())
	}
	if frPtr {
		CD(*fPtr, *rPtr, flag.Args())
	}
	if *hPtr {
		History(flag.Args())
	}
}
